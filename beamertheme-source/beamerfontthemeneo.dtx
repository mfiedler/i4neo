% \iffalse meta-comment -------------------------------------------------------
% i4neo template 2017 by Bernhard Heinloth
% based on the metropolis template by Matthias Vogelgesang et al.
%     https://github.com/matze/mtheme/
% and the original template was based on the HSRM theme by Benjamin Weiss.
%
% This work is licensed under a Creative Commons Attribution-ShareAlike 4.0
% International License (https://creativecommons.org/licenses/by-sa/4.0/).
% ------------------------------------------------------------------------- \fi
% \iffalse
%<*package>
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{beamerfontthemeneo}[2017/10/01 i4neo font theme]
%</package>
% \fi
% \CheckSum{0}
% \StopEventually{}
% \iffalse
%<*package>
% ------------------------------------------------------------------------- \fi
%
% \subsection{\themename font theme}
%
% A |beamer| font theme sets the style of the font used in the document.
%
%
%
% \subsubsection{Package dependencies}
%
%    \begin{macrocode}
\RequirePackage{etoolbox}
\RequirePackage{ifxetex}
\RequirePackage{ifluatex}
\RequirePackage{pgfopts}
%    \end{macrocode}
%
%
%
% \subsubsection{Load Fira fonts}
%
% If the presentation is compiled with Xe\LaTeX{} or Lua\LaTeX{}, the fontspec
% package is loaded and we search for the |Fira| fonts.
%
%    \begin{macrocode}
\ifboolexpr{bool {xetex} or bool {luatex}}{
  \@ifpackageloaded{fontspec}{
    \PassOptionsToPackage{no-math}{fontspec}
  }{
    \RequirePackage[no-math]{fontspec}
  }
%    \end{macrocode}
%
%    \begin{macrocode}
  \IfFileExists{FiraSans-Regular.otf}{
    \defaultfontfeatures{
          Scale     = 1.0,
          Extension = .otf
    }
  }{
    \PackageWarning{beamerthemeneo}{%
      FiraSans font not found in path, therefore using system fonts. %
      Make sure you have the fonts installed.%
    }
  }
  \setmonofont
    [ Numbers = {Monospaced,Lining},
      UprightFont    = *-Regular ,
      ItalicFont     = *-Regular ,
      BoldFont       = *-Medium ,
      BoldItalicFont = *-Medium ,
    ]
    {FiraMono}
  \newcommand{\neo@fontsave}{
    \let\firaneofamily\sfdefault  
    \renewcommand*\familydefault{\firaneofamily}
  }
  \newcommand{\neo@fontlight}{
    \setsansfont[
        Numbers = {OldStyle, Monospaced},
        UprightFont    = *-Light ,
        ItalicFont     = *-LightItalic ,
        BoldFont       = *-Regular ,
        BoldItalicFont = *-RegularItalic ,
      ]{FiraSans}
    \neo@fontsave
  }
  \newcommand{\neo@fontbook}{
    \setsansfont[
        Numbers = {OldStyle, Monospaced},
        UprightFont    = *-Book ,
        ItalicFont     = *-BookItalic ,
        BoldFont       = *-Medium ,
        BoldItalicFont = *-MediumItalic ,
      ]{FiraSans}
    \neo@fontsave
  }
  \newcommand{\neo@fontregular}{
    \setsansfont[
        Numbers = {OldStyle, Monospaced},
        UprightFont    = *-Regular ,
        ItalicFont     = *-RegularItalic ,
        BoldFont       = *-SemiBold ,
        BoldItalicFont = *-SemiBoldItalic ,
      ]{FiraSans}
    \neo@fontsave
  }
  \AtBeginEnvironment{tabular}{%
    \addfontfeature{Numbers={Monospaced}}%
  }
}{%
  \RequirePackage[utf8]{inputenc}
  \IfFileExists{FiraSans.sty}{
    \RequirePackage[T1]{fontenc}
    \RequirePackage[sfdefault]{FiraSans}
    \RequirePackage[nomap,lining]{FiraMono}
    \def\bfseries@tt{mb}
    \newcommand{\neo@fontsave}{
      \edef\familydefault{\sfdefault}
      \edef\seriesdefault{\mdseries@sf}
    }
    \newcommand{\neo@fontlight}{
      \def\mdseries@sf{l}
      \def\bfseries@sf{m}
      \neo@fontsave
    }
    \newcommand{\neo@fontbook}{
      \def\bfseries@sf{mb}
      \neo@fontsave
    }
    \newcommand{\neo@fontregular}{
      \def\mdseries@sf{m}
      \def\bfseries@sf{sb}
      \neo@fontsave
    }
  }{
    \PackageWarning{beamerthemeneo}{%
      You need to install the Fira Fonts package or compile with XeLaTeX or %
      LuaLaTeX to use the included Fira fonts%
    }
  }
}
%    \end{macrocode}
%
% This concludes the portion of the code which is only run when compiled with
% Xe\LaTeX{} or Lua\LaTeX{}. The remainder of this package applies regardless
% of the compiling engine.
%
%
%
% \subsubsection{General font definitions}
%
%    \begin{macrocode}
\setbeamerfont{title}{size=\Large,%
                      series=\bfseries}
\setbeamerfont{author}{size=\small}
\setbeamerfont{date}{size=\small}
\setbeamerfont{section title}{size=\Large,%
                              series=\bfseries}
\setbeamerfont{block title}{size=\normalsize,%
                            series=\bfseries}
\setbeamerfont{block title alerted}{size=\normalsize,%
                                    series=\bfseries}
\setbeamerfont*{subtitle}{size=\large}
\setbeamerfont{frametitle}{size=\large,%
                           series=\bfseries}
\setbeamerfont{caption}{size=\small}
\setbeamerfont{caption name}{series=\bfseries}
\setbeamerfont{description item}{series=\bfseries}
\setbeamerfont{page number in head/foot}{size=\scriptsize}
\setbeamerfont{bibliography entry author}{size=\normalsize,%
                                          series=\normalfont}
\setbeamerfont{bibliography entry title}{size=\normalsize,%
                                         series=\bfseries}
\setbeamerfont{bibliography entry location}{size=\normalsize,%
                                            series=\normalfont}
\setbeamerfont{bibliography entry note}{size=\small,%
                                        series=\normalfont}
\setbeamerfont{standout}{size=\Large,%
                         series=\bfseries}
%    \end{macrocode}
%
% \subsubsection{Font style options}
%
% \begin{macro}{titleformat title}
%    Controls the overall font style.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/style/.cd,
    .is choice,
    light/.code={\neo@fontlight},
    book/.code={\neo@fontbook},
    regular/.code={\neo@fontregular},
}
%    \end{macrocode}
% \end{macro}
%
%
% \subsubsection{Title format options}
%
% \begin{macro}{titleformat title}
%    Controls the format of the title.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/titleformat title/.cd,
    .is choice,
    regular/.code={%
      \let\neo@titleformat\@empty%
      \setbeamerfont{title}{shape=\normalfont}%
    },
    smallcaps/.code={%
      \let\neo@titleformat\@empty%
      \setbeamerfont{title}{shape=\scshape}%
    },
    allsmallcaps/.code={%
      \let\neo@titleformat\lowercase%
      \setbeamerfont{title}{shape=\scshape}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat title=allsmallcaps can lead to problems%
      }
    },
    allcaps/.code={%
      \let\neo@titleformat\uppercase%
      \setbeamerfont{title}{shape=\normalfont}
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat title=allcaps can lead to problems%
      }
    },
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{titleformat subtitle}
%    Control the format of the subtitle.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/titleformat subtitle/.cd,
    .is choice,
    regular/.code={%
      \let\neo@subtitleformat\@empty%
      \setbeamerfont{subtitle}{shape=\normalfont}%
    },
    smallcaps/.code={%
      \let\neo@subtitleformat\@empty%
      \setbeamerfont{subtitle}{shape=\scshape}%
    },
    allsmallcaps/.code={%
      \let\neo@subtitleformat\lowercase%
      \setbeamerfont{subtitle}{shape=\scshape}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat subtitle=allsmallcaps can lead to problems%
      }
    },
    allcaps/.code={%
      \let\neo@subtitleformat\uppercase%
      \setbeamerfont{subtitle}{shape=\normalfont}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat subtitle=allcaps can lead to problems%
      }
    },
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{titleformat section}
%    Controls the format of the section title.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/titleformat section/.cd,
    .is choice,
    regular/.code={%
      \let\neo@sectiontitleformat\@empty%
      \setbeamerfont{section title}{shape=\normalfont}%
    },
    smallcaps/.code={%
      \let\neo@sectiontitleformat\@empty%
      \setbeamerfont{section title}{shape=\scshape}%
    },
    allsmallcaps/.code={%
      \let\neo@sectiontitleformat\MakeLowercase%
      \setbeamerfont{section title}{shape=\scshape}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat section=allsmallcaps can lead to problems%
      }
    },
    allcaps/.code={%
      \let\neo@sectiontitleformat\MakeUppercase%
      \setbeamerfont{section title}{shape=\normalfont}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat section=allcaps can lead to problems%
      }
    },
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{frametitleformat}
%    Control the format of the frame title.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/titleformat frame/.cd,
    .is choice,
    regular/.code={%
      \let\neo@frametitleformat\@empty%
      \setbeamerfont{frametitle}{shape=\normalfont}%
    },
    smallcaps/.code={%
      \let\neo@frametitleformat\@empty%
      \setbeamerfont{frametitle}{shape=\scshape}%
    },
    allsmallcaps/.code={%
      \let\neo@frametitleformat\MakeLowercase%
      \setbeamerfont{frametitle}{shape=\scshape}%
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat frame=allsmallcaps can lead to problems%
      }
    },
    allcaps/.code={%
      \let\neo@frametitleformat\MakeUppercase%
      \setbeamerfont{frametitle}{shape=\normalfont}
      \PackageWarning{beamerthemeneo}{%
        Be aware that titleformat frame=allcaps can lead to problems%
      }
    },
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{titleformat aliases}
%    Allows |titleformat title| et al. to be used in the |\usetheme|
%    declaration, where \LaTeX{} automatically removes all spaces.
%    \begin{macrocode}
\pgfkeys{
  /neo/font/.cd,
  titleformattitle/.code=\pgfkeysalso{titleformat title=#1},
  titleformatsubtitle/.code=\pgfkeysalso{titleformat subtitle=#1},
  titleformatsection/.code=\pgfkeysalso{titleformat section=#1},
  titleformatframe/.code=\pgfkeysalso{titleformat frame=#1},
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\neo@font@setdefaults}
%    Sets default values for font theme options.
%    \begin{macrocode}
\newcommand{\neo@font@setdefaults}{
  \pgfkeys{/neo/font/.cd,
    style=book,
    titleformat title=regular,
    titleformat subtitle=regular,
    titleformat section=regular,
    titleformat frame=regular,
  }
}
%    \end{macrocode}
% \end{macro}
%
% We first define hooks to change the case format of the titles.
%
%    \begin{macrocode}
\def\neo@titleformat#1{#1}
\def\neo@subtitleformat#1{#1}
\def\neo@sectiontitleformat#1{#1}
\def\neo@frametitleformat#1{#1}
%    \end{macrocode}
%
% To make the uppercase and lowercase macros work in the title, subtitle, etc.,
% we have to patch the appropriate |beamer| commands that set their values.
% This solution was suggested by Enrico Gregorio in an answer to
% \href{http://tex.stackexchange.com/questions/112526/}{this StackExchange
% question}.
%
%    \begin{macrocode}
\patchcmd{\beamer@title}%
  {\def\inserttitle{#2}}%
  {\def\inserttitle{\neo@titleformat{#2}}}%
  {}%
  {\PackageError{beamerfontthemeneo}{Patching title failed}\@ehc}
\patchcmd{\beamer@subtitle}%
  {\def\insertsubtitle{#2}}%
  {\def\insertsubtitle{\neo@subtitleformat{#2}}}%
  {}%
  {\PackageError{beamerfontthemeneo}{Patching subtitle failed}\@ehc}
\patchcmd{\sectionentry}
  {\def\insertsectionhead{#2}}
  {\def\insertsectionhead{\neo@sectiontitleformat{#2}}}
  {}
  {\PackageError{beamerfontthemeneo}{Patching section title failed}\@ehc}
\@tempswafalse
\patchcmd{\beamer@section}
  {\def\insertsectionhead{\hyperlink{Navigation\the\c@page}{#1}}}
  {\def\insertsectionhead{\hyperlink{Navigation\the\c@page}{%
    \neo@sectiontitleformat{#1}}}}
  {\@tempswatrue}
  {}
\patchcmd{\beamer@section}
  {\edef\insertsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{\unexpanded{#1}}}}
  {\edef\insertsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{%
    \noexpand\neo@sectiontitleformat{\unexpanded{#1}}}}}
  {\@tempswatrue}
  {}
\patchcmd{\beamer@section}
  {\protected@edef\insertsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{#1}}}
  {\protected@edef\insertsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{%
    \noexpand\neo@sectiontitleformat{#1}}}}
  {\@tempswatrue}
  {}
\if@tempswa\else
  \PackageError{beamerfontthemeneo}{Patching section title failed}\@ehc
\fi
\@tempswafalse
\patchcmd{\beamer@subsection}
  {\edef\insertsubsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{\unexpanded{#1}}}}
  {\edef\insertsubsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{%
    \noexpand\neo@sectiontitleformat{\unexpanded{#1}}}}}
  {\@tempswatrue}
  {}
\patchcmd{\beamer@subsection}
  {\def\insertsubsectionhead{\hyperlink{Navigation\the\c@page}{#1}}}
  {\def\insertsubsectionhead{\hyperlink{Navigation\the\c@page}{%
    \neo@sectiontitleformat{#1}}}}
  {\@tempswatrue}
  {}
\patchcmd{\beamer@subsection}
  {\protected@edef\insertsubsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{#1}}}
  {\protected@edef\insertsubsectionhead{\noexpand\hyperlink{Navigation\the\c@page}{%
    \noexpand\neo@sectiontitleformat{#1}}}}
  {\@tempswatrue}
  {}
\if@tempswa\else
  \PackageError{beamerfontthemeneo}{Patching section title failed}\@ehc
\fi
%    \end{macrocode}
%
% Similarly, to make the |\MakeLowercase| and |\MakeUppercase| macros work in
% the frame title we have to patch |\beamer@@frametitle|.
%
%    \begin{macrocode}
\patchcmd{\beamer@@frametitle}
  {{%
      \gdef\insertframetitle{{#2\ifnum\beamer@autobreakcount>0\relax{}\space%
      \usebeamertemplate*{frametitle continuation}\fi}}%
    \gdef\beamer@frametitle{#2}%
    \gdef\beamer@shortframetitle{#1}%
    }}
  {{%
      \gdef\insertframetitle{{\neo@frametitleformat{#2}\ifnum%
      \beamer@autobreakcount>0\relax{}\space%
      \usebeamertemplate*{frametitle continuation}\fi}}%
    \gdef\beamer@frametitle{#2}%
    \gdef\beamer@shortframetitle{#1}%
    }}
  {}
  {\PackageError{beamerfontthemeneo}{Patching frame title failed}\@ehc}
%    \end{macrocode}
%
%
%
% \subsubsection{Process package options}
%
%    \begin{macrocode}
\neo@font@setdefaults
\ProcessPgfPackageOptions{/neo/font}
%    \end{macrocode}
% \iffalse
%</package>
% \fi
% \Finale
\endinput
